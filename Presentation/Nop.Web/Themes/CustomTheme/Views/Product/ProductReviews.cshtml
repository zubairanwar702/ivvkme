@model ProductReviewsModel

@using Nop.Core

@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(Model.ProductName);
    Html.AddTitleParts(T("PageTitle.ProductReviews").Text);
    //page class
    Html.AppendPageCssClassParts("html-product-reviews-page");
}
<div class="page product-reviews-page">
    <div class="page-title">
        <h2 class="w-100 text-center">@T("Reviews.ProductReviewsFor") <a href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })">@Model.ProductName</a></h2>
    </div>
    <div class="page-body">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductReviewsPageTop, additionalData = Model })
        @if (Model.AddProductReview.SuccessfullyAdded)
        {
            <div class="result alert alert-success">
                @Model.AddProductReview.Result
            </div>
        }
        else
        {
            <div class="write-review" id="review-form">
                <h6 class="title">
                    <strong>@T("Reviews.Write")</strong>
                </h6>
                <form asp-route="ProductReviews" method="post">
                    <div asp-validation-summary="ModelOnly" class="message-error"></div>
                    <div class="fieldset">
                        <div class="form-fields">
                            <div class="inputs">
                                <label class="col-form-label" asp-for="AddProductReview.Title" asp-postfix=":"></label>
                                <nop-required />
                                <input asp-for="AddProductReview.Title" class="review-title form-control" asp-disabled="@(!Model.AddProductReview.CanCurrentCustomerLeaveReview)" />
                                <span asp-validation-for="AddProductReview.Title"></span>
                            </div>
                            <div class="inputs">
                                <label asp-for="AddProductReview.ReviewText" asp-postfix=":"></label>
                                <nop-required />
                                <textarea asp-for="AddProductReview.ReviewText" class="review-text form-control" asp-disabled="@(!Model.AddProductReview.CanCurrentCustomerLeaveReview)"></textarea>
                                <span asp-validation-for="AddProductReview.ReviewText"></span>
                            </div>
                            <div class="review-rating">
                                <div class="name-description">
                                    <label asp-for="AddProductReview.Rating" asp-postfix=":"></label>
                                </div>
                                <div class="rating-wrapper">
                                    <div class="rating-options">
                                        <div class="custom-control custom-radio check">
                                            <input asp-for="AddProductReview.Rating" value="1" type="radio" id="addproductrating_1" aria-label="@T("Reviews.Fields.Rating.Bad")" class="custom-control-input" />
                                            <label class="custom-control-label" for="addproductrating_1"></label>
                                        </div>
                                        <div class="custom-control custom-radio check">
                                            <input asp-for="AddProductReview.Rating" value="2" type="radio" id="addproductrating_2" aria-label="@T("Reviews.Fields.Rating.NotGood")" class="custom-control-input" />
                                            <label class="custom-control-label" for="addproductrating_2"></label>
                                        </div>
                                        <div class="custom-control custom-radio check">
                                            <input asp-for="AddProductReview.Rating" value="3" type="radio" id="addproductrating_3" aria-label="@T("Reviews.Fields.Rating.NotGoodNotExcellent")" class="custom-control-input" />
                                            <label class="custom-control-label" for="addproductrating_3"></label>
                                        </div>
                                        <div class="custom-control custom-radio check">
                                            <input asp-for="AddProductReview.Rating" value="4" type="radio" id="addproductrating_4" aria-label="@T("Reviews.Fields.Rating.Good")" class="custom-control-input" />
                                            <label class="custom-control-label" for="addproductrating_4"></label>
                                        </div>
                                        <div class="custom-control custom-radio">
                                            <input asp-for="AddProductReview.Rating" value="5" type="radio" id="addproductrating_5" aria-label="@T("Reviews.Fields.Rating.Excellent")" class="custom-control-input" />
                                            <label class="custom-control-label" for="addproductrating_5"></label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @if (Model.ReviewTypeList.Count > 0)
                            {
                                foreach (var additionalReview in Model.AddAdditionalProductReviewList.OrderBy(ob => ob.DisplayOrder).ToList())
                                {
                                    var curAdditionalReview = Model.AddAdditionalProductReviewList.IndexOf(additionalReview);
                                    <div class="review-rating">
                                        <div class="name-description">
                                            <div class="title">
                                                <h6>@Html.Raw(additionalReview.Name):</h6>
                                                <span class="tooltiptext">@Html.Raw(additionalReview.Description)</span>
                                            </div>
                                        </div>
                                        <div class="rating-wrapper">
                                            <div class="rating-options">
                                                <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].ReviewTypeId" value="@(additionalReview.ReviewTypeId)" type="hidden" />
                                                <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Name" value="@(additionalReview.Name)" type="hidden" />
                                                <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Description" value="@(additionalReview.Description)" type="hidden" />
                                                <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].DisplayOrder" value="@(additionalReview.DisplayOrder)" type="hidden" />
                                                <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].IsRequired" value="@(additionalReview.IsRequired)" type="hidden" />

                                                <div class="custom-control custom-radio" style="display: none;">
                                                    <input class="custom-control-input" asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="0" type="radio" id="addproductratingext_0_@(additionalReview.ReviewTypeId)" />
                                                    <label class="custom-control-label" for="addproductratingext_0_@(additionalReview.ReviewTypeId)"></label>
                                                </div>
                                                <div class="custom-control custom-radio check">
                                                    <input class="custom-control-input" asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="1" type="radio" id="addproductratingext_1_@(additionalReview.ReviewTypeId)" />
                                                    <label class="custom-control-label" for="addproductratingext_1_@(additionalReview.ReviewTypeId)"></label>
                                                </div>
                                                <div class="custom-control custom-radio check">
                                                    <input class="custom-control-input" asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="2" type="radio" id="addproductratingext_2_@(additionalReview.ReviewTypeId)" />
                                                    <label class="custom-control-label" for="addproductratingext_2_@(additionalReview.ReviewTypeId)"></label>
                                                </div>
                                                <div class="custom-control custom-radio check">
                                                    <input class="custom-control-input" asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="3" type="radio" id="addproductratingext_3_@(additionalReview.ReviewTypeId)" />
                                                    <label class="custom-control-label" for="addproductratingext_3_@(additionalReview.ReviewTypeId)"></label>
                                                </div>
                                                <div class="custom-control custom-radio check">
                                                    <input class="custom-control-input" asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="4" type="radio" id="addproductratingext_4_@(additionalReview.ReviewTypeId)" />
                                                    <label class="custom-control-label" for="addproductratingext_4_@(additionalReview.ReviewTypeId)"></label>
                                                </div>
                                                <div class="custom-control custom-radio check">
                                                    <input class="custom-control-input" asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="5" type="radio" id="addproductratingext_5_@(additionalReview.ReviewTypeId)" />
                                                    <label class="custom-control-label" for="addproductratingext_5_@(additionalReview.ReviewTypeId)"></label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }

                            @if (Model.AddProductReview.DisplayCaptcha)
                            {
                                <div class="captcha-box">
                                    <nop-captcha />
                                </div>
                            }
                        </div>
                    </div>
                    <div class="buttons my-3">
                        <button type="submit" name="add-review" class="btn btn-primary write-product-review-button">
                            @T("Reviews.SubmitButton")
                        </button>
                    </div>
                </form>
            </div>
        }
        @if (Model.Items.Count > 0)
        {            
            <div class="product-review-list row-sm">
                <div class="d-inline-flex align-items-center existing-reviews col-12 mb-3">
                    <h5>@T("Reviews.ExistingReviews")<span class="ml-3">(@Model.Items.Count)</span></h5>
                </div>
                @foreach (var review in Model.Items)
                {
                    int ratingPercent = review.Rating * 20;
                <div class="col-lg-6 col-12 mb-3">
                    <div class="d-sm-inline-flex d-flex flex-sm-row flex-column card card-body product-review-item w-100">
                        <div class="d-flex flex-column justify-content-start align-items-center align-items-sm-start text-center text-sm-left">
                            <div class="review-item-head mb-1">
                                <div class="product-review-box">
                                    <div class="ratings">
                                        <div class="rating-box">
                                            <div class="rating" style="width: @(ratingPercent)%">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @foreach (var reviewType in review.AdditionalProductReviewList.Where(x => x.Rating > 0 && x.VisibleToAllCustomers))
                            {
                                var ratingExtPercent = reviewType.Rating * 20;
                                <div class="review-type-rating-ext my-1">
                                    <div class="review-title">
                                        <h6 class="mb-1">@reviewType.Name:</h6>
                                    </div>
                                    <div class="product-review-box">
                                        <div class="ratings">
                                            <div class="rating-box">
                                                <div class="rating" style="width: @(ratingExtPercent)%">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="customer">
                                @if (review.AllowViewingProfiles)
                                {
                                    <a href="@Url.RouteUrl("CustomerProfile", new { id = review.CustomerId })">@(review.CustomerName)</a>
                                }
                                else
                                {
                                    @review.CustomerName
                                }
                            </div>
                            <div class="date">
                                <span>@review.WrittenOnStr</span>
                            </div>
                        </div>
                        <div class="d-flex flex-column justify-content-sm-start justify-content-center align-items-sm-start align-items-center w-100 py-sm-0 py-3 px-sm-3 px-0">
                            <div class="review-title">
                                <h5>@review.Title</h5>
                            </div>
                            <div class="review-content">
                                <div class="review-text">
                                    @Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(review.ReviewText, false, true, false, false, false, false))
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(review.ReplyText))
                            {
                                <div class="reply-content">
                                    @T("Reviews.Reply")
                                    <blockquote class="blockquote-footer">
                                        @Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(review.ReplyText, false, true, false, false, false, false))
                                    </blockquote>
                                </div>
                            }
                        </div>
                        <div class="d-flex flex-column justify-content-start">
                            @await Component.InvokeAsync("Widget", new { widgetZone = "productreviews_page_inside_review", additionalData = review.Id })
                            <partial name="_ProductReviewHelpfulness" model="review.Helpfulness" />
                        </div>
                    </div>
                </div>
                }
            </div>
        }
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductReviewsPageBottom, additionalData = Model })
    </div>
</div>
<script asp-location="Footer">
    $(document).ready(function () {
        $('.rating-options .custom-radio input').each(function () {
            $(this).on('click', function () {
                var forCheck = $(this).parent().prevAll();
                var forUncheck = $(this).parent().nextAll();
                forCheck.removeClass('check');
                forUncheck.removeClass('check');
                forCheck.addClass('check');
                $(this).attr('checked', true);
            });
        });
    });
</script>