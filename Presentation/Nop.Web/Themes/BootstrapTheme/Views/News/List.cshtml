@model NewsItemListModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.NewsArchive").Text);
    //page class
    Html.AppendPageCssClassParts("html-news-list-page");
}
<div class="page news-list-page">
    <div class="page-title d-inline-flex align-items-center justify-content-between w-100">
        <h2>@T("News")</h2>
        <a href="@Url.RouteUrl("NewsRSS", new { languageId = Model.WorkingLanguageId })" class="link-rss btn btn-sm btn-warning" title="@T("News.RSS.Hint")">@T("News.RSS")</a>
    </div>
    <div class="page-body">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.NewsListPageBeforeItems })
        <div class="news-items row-sm">
            @foreach (var item in Model.NewsItems)
            {
                <div class="col-xl-4 col-lg-6 col-md-6 col-12 mb-3">
                    <div class="news-item card">
                        <div class="news-head card-body">
                            <h4 class="news-title card-title" href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })">@item.Title</h4>
                            <h6 class="news-date card-subtitle mb-2 text-muted">-@item.CreatedOn.ToString("D")</h6>
                            <p class="news-body card-text">
                                @Html.Raw(item.Short)
                            </p>
                            <div class="buttons w-100 text-center">
                                <a href="@Url.RouteUrl("NewsItem", new { SeName = item.SeName })" class="read-more btn btn-primary">@T("News.MoreInfo")</a>
                            </div>
                        </div>
                        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.NewsListPageInsideItem, additionalData = item })
                    </div>
                </div>
            }
        </div>
        @{
            var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
        }
        @if (!pager.IsEmpty())
        {
            <div class="pager">
                @pager
            </div>
        }
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.NewsListPageAfterItems })
    </div>
</div>
