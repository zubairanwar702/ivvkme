@model SearchBoxModel
<form asp-route="ProductSearch" method="get" id="small-search-box-form" class="m-lg-0 m-1 pt-lg-1 pb-lg-1 py-0">
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.SearchBoxBeforeSearchButton })
    <div class="input-group w-100 mb-0">
        <input type="text" class="form-control search-box-text" id="small-searchterms" autocomplete="off" name="q" style="width:50%;" placeholder="@T("Search.SearchBox.Tooltip")" aria-label="@T("Search.SearchBox.Text.Label")">
        <div class="input-group-append">
            <button class="btn btn-warning search-box-button d-inline-flex align-items-center h-100 m-0" type="submit">
                <span class="lnr linearicons-magnifier font-weight-bold"></span>
            </button>
        </div>
    </div>
    @if (Model.SearchTermMinimumLength > 0)
    {
        <script asp-location="Footer">
            $("#small-search-box-form").on("submit", function(event) {
                if ($("#small-searchterms").val() == "") {
                    alert('@Html.Raw(JavaScriptEncoder.Default.Encode(T("Search.EnterSearchTerms").Text))');
                    event.preventDefault();
                }
            });
        </script>
    }
    @if (Model.AutoCompleteEnabled)
    {
        <script asp-location="Footer">
            $(document).ready(function() {
                var showLinkToResultSearch;
                var searchText;
                $('#small-searchterms').autocomplete({
                        delay: 500,
                        minLength: @(Model.SearchTermMinimumLength.ToString()),
                        source: '@(Url.RouteUrl("ProductSearchAutoComplete"))',
                        appendTo: '.search-box',
                        select: function(event, ui) {
                            $("#small-searchterms").val(ui.item.label);
                            setLocation(ui.item.producturl);
                            return false;
                    },
                    //append link to the end of list
                    open: function(event, ui) {
                        //display link to search page
                        if (showLinkToResultSearch) {
                            searchText = document.getElementById("small-searchterms").value;
                            $(".ui-autocomplete").append("<li class=\"ui-menu-item\" role=\"presentation\"><a href=\"/search?q=" + searchText + "\">@T("Search.SearchBox.SearchPageLink")</a></li>");
                        }
                    }
                })
                .data("ui-autocomplete")._renderItem = function(ul, item) {
                    var t = item.label;
                    showLinkToResultSearch = item.showlinktoresultsearch;
                    //html encode
                    t = htmlEncode(t);
                    return $("<li></li>")
                        .data("item.autocomplete", item)
                        .append("<a>@(Model.ShowProductImagesInSearchAutoComplete ? Html.Raw("<img src='\" + item.productpictureurl + \"'>") : null)<span>" + t + "</span></a>")
                        .appendTo(ul);
                };
            });
        </script>
    }
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.SearchBox })
</form>